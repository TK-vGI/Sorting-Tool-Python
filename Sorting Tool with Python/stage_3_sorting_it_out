import argparse
from typing import List


def max_stats(lst: List[str|int], datatype: str) -> None:
    if not lst:
        print(f"No {datatype} data provided.")
        return

    match datatype:
        case "long":
            try:
                length = len(lst)
                maximum = max(lst)
                counter = lst.count(maximum)
                percentage = (counter * 100) // length
                print("Total numbers:", length)
                print(f"The greatest number: {maximum} ({counter} time{'s' if counter != 1 else ''}, {percentage}%)")
            except ValueError:
                print("Error: Invalid integer input for long datatype.")
        case "line":
            length = len(lst)
            longest = max(lst, key=lambda x: (len(x), x))
            longest_count = lst.count(longest)
            percentage = longest_count * 100 // len(lst)
            print("Total lines:", length)
            print(
                f"The longest line:\n{longest}\n({longest_count} time{'s' if longest_count != 1 else ''}, {percentage}%)")
        case "word":
            length = len(lst)
            longest = max(lst, key=lambda x: (len(x), x))
            longest_count = lst.count(longest)
            percentage = longest_count * 100 // len(lst)
            print("Total words:", length)
            print(
                f"The longest word: {longest} ({longest_count} time{'s' if longest_count != 1 else ''}, {percentage}%)")

def sort_integers(lst: List[int]) -> None:
    if not lst:
        print("No numbers provided.")
        return
    size = len(lst)
    sorted_lst = sorted(lst)
    print(f"Total numbers: {size}.")
    print("Sorted data:", *sorted_lst)


def get_input(datatype: str) -> List[str|int]:
    inp_data = []
    while True:
        try:
            line = input()
            if datatype == "long":
                inp_data.extend([int(x) for x in line.split()])
            elif datatype == "line":
                inp_data.append(line)  # Treat each line as a whole string
            elif datatype == "word":
                inp_data.extend(line.split())  # Split into words
        except ValueError:
            if datatype == "long":
                print("Error: Non-integer input detected for long datatype. Skipping invalid input.")
                continue
        except EOFError:
            break
    return inp_data


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="This program process input data based on type.")
    parser.add_argument(
        "-dataType", "--dataType",
        choices=["long", "line", "word"],
        default="word",
        help="Datatype decides which method is used to process the data.")
    parser.add_argument(
        "-sortIntegers", "--sortIntegers",
        action="store_true",
        help='sorts integers, ignores other args')
    args = parser.parse_args()

    if args.sortIntegers:
        data_int = get_input("long")
        sort_integers(data_int)
    else:
        data_type = args.dataType
        # print(f"The argument you provided is: {data_type}")
        data = get_input(data_type)
        max_stats(data, data_type)