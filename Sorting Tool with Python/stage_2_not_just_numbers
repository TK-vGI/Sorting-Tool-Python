import argparse

# def your_func(data, dataType):
#     pass
#
# res =  your_func(data, **vars(parser.parse_args()))

parser = argparse.ArgumentParser()
parser.add_argument("-dataType", choices=["long", "line", "word"])
args = parser.parse_args()
if args.dataType is None:
    data_type = 'word'
else:
    data_type = args.dataType
# print(f"The argument you provided is: {data_type}")

def max_stats(lst, datatype) -> None:
    # print(data,dataType)
    match datatype:
        case "long":
            length = len(lst)
            maximum = max(lst)
            counter = lst.count(maximum)
            percentage = counter * 100 // len(lst)
            print("Total numbers:", length)
            print(f"The greatest number: {maximum} ({counter} time{"s"[:counter ^ 1]}, {percentage}%)")
        case "line":
            length = len(lst)
            longest = max(data, key=lambda x: (len(x), x))
            longest_count = lst.count(longest)
            percentage = longest_count * 100 // len(lst)
            print("Total lines:", length)
            print(f"The longest line:\n{longest}\n({longest_count} time{"s"[:longest_count ^ 1]}, {percentage}%)")
        case "word":
            length = len(lst)
            longest = max(data, key=lambda x: (len(x), x))
            longest_count = lst.count(longest)
            percentage = longest_count * 100 // len(lst)
            print("Total words:", length)
            print(f"The longest word: {longest} ({longest_count} time{"s"[:longest_count ^ 1]}, {percentage}%)")

data = []
while True:
    try:
        line = input()
        if data_type == "long":
            data.extend(map(int, line.split()))  # Convert input to integers
        elif data_type == "line":
            data.append(line)  # Treat each line as a whole string
        elif data_type == "word":
            data.extend(line.split())  # Split into words
    except EOFError:
        break

max_stats(data, data_type)